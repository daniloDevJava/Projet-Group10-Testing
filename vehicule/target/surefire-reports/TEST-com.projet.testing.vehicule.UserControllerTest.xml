<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.projet.testing.vehicule.UserControllerTest" time="46.222" tests="22" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="G:\Projet-Group10-Testing\vehicule\target\test-classes;G:\Projet-Group10-Testing\vehicule\target\classes;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.4\spring-boot-starter-data-jpa-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.4\spring-boot-starter-aop-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.4\spring-boot-starter-jdbc-3.3.4.jar;C:\Users\MON PC\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-jdbc\6.1.13\spring-jdbc-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\MON PC\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\MON PC\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\MON PC\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\MON PC\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\MON PC\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\MON PC\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\MON PC\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\MON PC\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\MON PC\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\MON PC\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\MON PC\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\MON PC\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\MON PC\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\MON PC\.m2\repository\org\springframework\data\spring-data-jpa\3.3.4\spring-data-jpa-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\data\spring-data-commons\3.3.4\spring-data-commons-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-orm\6.1.13\spring-orm-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-context\6.1.13\spring-context-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-tx\6.1.13\spring-tx-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-beans\6.1.13\spring-beans-6.1.13.jar;C:\Users\MON PC\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\MON PC\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-aspects\6.1.13\spring-aspects-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.4\spring-boot-starter-validation-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.4\spring-boot-starter-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot\3.3.4\spring-boot-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.4\spring-boot-autoconfigure-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.4\spring-boot-starter-logging-3.3.4.jar;C:\Users\MON PC\.m2\repository\ch\qos\logback\logback-classic\1.5.8\logback-classic-1.5.8.jar;C:\Users\MON PC\.m2\repository\ch\qos\logback\logback-core\1.5.8\logback-core-1.5.8.jar;C:\Users\MON PC\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\MON PC\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\MON PC\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\MON PC\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\MON PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.30\tomcat-embed-el-10.1.30.jar;C:\Users\MON PC\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\MON PC\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\MON PC\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\MON PC\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\MON PC\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.2\jackson-databind-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.2\jackson-annotations-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.2\jackson-core-2.17.2.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.3\junit-jupiter-api-5.10.3.jar;C:\Users\MON PC\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\MON PC\.m2\repository\org\junit\platform\junit-platform-commons\1.10.3\junit-platform-commons-1.10.3.jar;C:\Users\MON PC\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.3\junit-jupiter-params-5.10.3.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.3\junit-jupiter-engine-5.10.3.jar;C:\Users\MON PC\.m2\repository\org\junit\platform\junit-platform-engine\1.10.3\junit-platform-engine-1.10.3.jar;C:\Users\MON PC\.m2\repository\com\aventstack\extentreports\5.1.1\extentreports-5.1.1.jar;C:\Users\MON PC\.m2\repository\io\reactivex\rxjava3\rxjava\3.1.9\rxjava-3.1.9.jar;C:\Users\MON PC\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\MON PC\.m2\repository\org\freemarker\freemarker\2.3.33\freemarker-2.3.33.jar;C:\Users\MON PC\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.4\spring-boot-starter-web-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.4\spring-boot-starter-json-3.3.4.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.2\jackson-datatype-jsr310-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.4\spring-boot-starter-tomcat-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.30\tomcat-embed-core-10.1.30.jar;C:\Users\MON PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.30\tomcat-embed-websocket-10.1.30.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-web\6.1.13\spring-web-6.1.13.jar;C:\Users\MON PC\.m2\repository\io\micrometer\micrometer-observation\1.13.4\micrometer-observation-1.13.4.jar;C:\Users\MON PC\.m2\repository\io\micrometer\micrometer-commons\1.13.4\micrometer-commons-1.13.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-webmvc\6.1.13\spring-webmvc-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-expression\6.1.13\spring-expression-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.4\spring-boot-starter-security-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-aop\6.1.13\spring-aop-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-config\6.3.3\spring-security-config-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-web\6.3.3\spring-security-web-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-test\6.3.3\spring-security-test-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-core\6.3.3\spring-security-core-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-crypto\6.3.3\spring-security-crypto-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-core\6.1.13\spring-core-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-jcl\6.1.13\spring-jcl-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-test\6.1.13\spring-test-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\MON PC\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\MON PC\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.5.0\springdoc-openapi-starter-webmvc-ui-2.5.0.jar;C:\Users\MON PC\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.5.0\springdoc-openapi-starter-webmvc-api-2.5.0.jar;C:\Users\MON PC\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.5.0\springdoc-openapi-starter-common-2.5.0.jar;C:\Users\MON PC\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.21\swagger-core-jakarta-2.2.21.jar;C:\Users\MON PC\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\MON PC\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.21\swagger-annotations-jakarta-2.2.21.jar;C:\Users\MON PC\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.21\swagger-models-jakarta-2.2.21.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.2\jackson-dataformat-yaml-2.17.2.jar;C:\Users\MON PC\.m2\repository\org\webjars\swagger-ui\5.13.0\swagger-ui-5.13.0.jar;C:\Users\MON PC\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\MON PC\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.4\spring-boot-starter-test-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-test\3.3.4\spring-boot-test-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.4\spring-boot-test-autoconfigure-3.3.4.jar;C:\Users\MON PC\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\MON PC\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\MON PC\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\MON PC\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\MON PC\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\MON PC\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\MON PC\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\MON PC\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\MON PC\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\MON PC\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\MON PC\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\MON PC\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\MON PC\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\MON PC\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\MON PC\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\MON PC\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CM"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
    <property name="sun.java.command" value="C:\Users\MON PC\AppData\Local\Temp\surefire6886279658719336383\surefirebooter-20250630024357652_3.jar C:\Users\MON PC\AppData\Local\Temp\surefire6886279658719336383 2025-06-30T02-43-56_998-jvmRun1 surefire-20250630024357652_1tmp surefire_0-20250630024357652_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="G:\Projet-Group10-Testing\vehicule\target\test-classes;G:\Projet-Group10-Testing\vehicule\target\classes;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.4\spring-boot-starter-data-jpa-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.4\spring-boot-starter-aop-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.4\spring-boot-starter-jdbc-3.3.4.jar;C:\Users\MON PC\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-jdbc\6.1.13\spring-jdbc-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\MON PC\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\MON PC\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\MON PC\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\MON PC\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\MON PC\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\MON PC\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\MON PC\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\MON PC\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\MON PC\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\MON PC\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\MON PC\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\MON PC\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\MON PC\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\MON PC\.m2\repository\org\springframework\data\spring-data-jpa\3.3.4\spring-data-jpa-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\data\spring-data-commons\3.3.4\spring-data-commons-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-orm\6.1.13\spring-orm-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-context\6.1.13\spring-context-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-tx\6.1.13\spring-tx-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-beans\6.1.13\spring-beans-6.1.13.jar;C:\Users\MON PC\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\MON PC\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-aspects\6.1.13\spring-aspects-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.4\spring-boot-starter-validation-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.4\spring-boot-starter-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot\3.3.4\spring-boot-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.4\spring-boot-autoconfigure-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.4\spring-boot-starter-logging-3.3.4.jar;C:\Users\MON PC\.m2\repository\ch\qos\logback\logback-classic\1.5.8\logback-classic-1.5.8.jar;C:\Users\MON PC\.m2\repository\ch\qos\logback\logback-core\1.5.8\logback-core-1.5.8.jar;C:\Users\MON PC\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\MON PC\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\MON PC\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\MON PC\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\MON PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.30\tomcat-embed-el-10.1.30.jar;C:\Users\MON PC\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\MON PC\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\MON PC\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\MON PC\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\MON PC\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.2\jackson-databind-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.2\jackson-annotations-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.2\jackson-core-2.17.2.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.3\junit-jupiter-api-5.10.3.jar;C:\Users\MON PC\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\MON PC\.m2\repository\org\junit\platform\junit-platform-commons\1.10.3\junit-platform-commons-1.10.3.jar;C:\Users\MON PC\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.3\junit-jupiter-params-5.10.3.jar;C:\Users\MON PC\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.3\junit-jupiter-engine-5.10.3.jar;C:\Users\MON PC\.m2\repository\org\junit\platform\junit-platform-engine\1.10.3\junit-platform-engine-1.10.3.jar;C:\Users\MON PC\.m2\repository\com\aventstack\extentreports\5.1.1\extentreports-5.1.1.jar;C:\Users\MON PC\.m2\repository\io\reactivex\rxjava3\rxjava\3.1.9\rxjava-3.1.9.jar;C:\Users\MON PC\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\MON PC\.m2\repository\org\freemarker\freemarker\2.3.33\freemarker-2.3.33.jar;C:\Users\MON PC\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.4\spring-boot-starter-web-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.4\spring-boot-starter-json-3.3.4.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.2\jackson-datatype-jsr310-2.17.2.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.4\spring-boot-starter-tomcat-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.30\tomcat-embed-core-10.1.30.jar;C:\Users\MON PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.30\tomcat-embed-websocket-10.1.30.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-web\6.1.13\spring-web-6.1.13.jar;C:\Users\MON PC\.m2\repository\io\micrometer\micrometer-observation\1.13.4\micrometer-observation-1.13.4.jar;C:\Users\MON PC\.m2\repository\io\micrometer\micrometer-commons\1.13.4\micrometer-commons-1.13.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-webmvc\6.1.13\spring-webmvc-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-expression\6.1.13\spring-expression-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.4\spring-boot-starter-security-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-aop\6.1.13\spring-aop-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-config\6.3.3\spring-security-config-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-web\6.3.3\spring-security-web-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-test\6.3.3\spring-security-test-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-core\6.3.3\spring-security-core-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\security\spring-security-crypto\6.3.3\spring-security-crypto-6.3.3.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-core\6.1.13\spring-core-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-jcl\6.1.13\spring-jcl-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\springframework\spring-test\6.1.13\spring-test-6.1.13.jar;C:\Users\MON PC\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\MON PC\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\MON PC\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.5.0\springdoc-openapi-starter-webmvc-ui-2.5.0.jar;C:\Users\MON PC\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.5.0\springdoc-openapi-starter-webmvc-api-2.5.0.jar;C:\Users\MON PC\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.5.0\springdoc-openapi-starter-common-2.5.0.jar;C:\Users\MON PC\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.21\swagger-core-jakarta-2.2.21.jar;C:\Users\MON PC\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\MON PC\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.21\swagger-annotations-jakarta-2.2.21.jar;C:\Users\MON PC\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.21\swagger-models-jakarta-2.2.21.jar;C:\Users\MON PC\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.2\jackson-dataformat-yaml-2.17.2.jar;C:\Users\MON PC\.m2\repository\org\webjars\swagger-ui\5.13.0\swagger-ui-5.13.0.jar;C:\Users\MON PC\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\MON PC\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.4\spring-boot-starter-test-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-test\3.3.4\spring-boot-test-3.3.4.jar;C:\Users\MON PC\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.4\spring-boot-test-autoconfigure-3.3.4.jar;C:\Users\MON PC\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\MON PC\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\MON PC\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\MON PC\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\MON PC\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\MON PC\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\MON PC\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\MON PC\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\MON PC\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\MON PC\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\MON PC\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\MON PC\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\MON PC\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\MON PC\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\MON PC\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\MON PC\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\MON PC"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="G:\Projet-Group10-Testing\vehicule"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\MON PC\AppData\Local\Temp\surefire6886279658719336383\surefirebooter-20250630024357652_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.7+8-LTS-245"/>
    <property name="user.name" value="MON PC"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\MON PC\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\MONPC~1\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="21.0.7"/>
    <property name="user.dir" value="G:\Projet-Group10-Testing\vehicule"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="8860"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Python313\Scripts\;C:\Program Files\Python313\;C:\msys64\Unicon\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Unicon\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files (x86)\LLVM\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Go\bin;C:\ProgramData\chocolatey\bin;C:\ProgramData\chocolatey\lib\maven\apache-maven-3.9.10\bin;C:\Users\MON PC\AppData\Local\Microsoft\WindowsApps;C:\Users\MON PC\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\MySQL\MySQL Installer for Windows;C:\Program Files\PostgreSQL\17\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\MySQL\MySQL Workbench 8.0;C:\Program Files\Java\jdk-21\bin;C:\Users\MON PC\go\bin;C:\msys64\ucrt64\bin;C:\Program Files\GNUstep\bin;C:\GNUstep\mingw\libexec\gcc\mingw32\4.4.0;C:\Program Files\Python313;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.7+8-LTS-245"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[vehicule] "/>
  </properties>
  <testcase name="testGetUserByMail" classname="com.projet.testing.vehicule.UserControllerTest" time="16.4">
    <system-out><![CDATA[2025-06-30T02:45:25.048+02:00  INFO 8860 --- [vehicule] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.projet.testing.vehicule.UserControllerTest]: UserControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-30T02:45:25.264+02:00  INFO 8860 --- [vehicule] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.projet.testing.vehicule.VehiculeApplication for test class com.projet.testing.vehicule.UserControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.4)

2025-06-30T02:45:25.580+02:00  INFO 8860 --- [vehicule] [           main] c.p.testing.vehicule.UserControllerTest  : Starting UserControllerTest using Java 21.0.7 with PID 8860 (started by MON PC in G:\Projet-Group10-Testing\vehicule)
2025-06-30T02:45:25.580+02:00  INFO 8860 --- [vehicule] [           main] c.p.testing.vehicule.UserControllerTest  : The following 1 profile is active: "test"
2025-06-30T02:45:27.450+02:00  INFO 8860 --- [vehicule] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-30T02:45:27.559+02:00  INFO 8860 --- [vehicule] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 6 JPA repository interfaces.
2025-06-30T02:45:28.403+02:00  INFO 8860 --- [vehicule] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-30T02:45:28.403+02:00  INFO 8860 --- [vehicule] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-30T02:45:28.448+02:00  INFO 8860 --- [vehicule] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-30T02:45:28.467+02:00  INFO 8860 --- [vehicule] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-06-30T02:45:31.738+02:00  INFO 8860 --- [vehicule] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-06-30T02:45:31.738+02:00  INFO 8860 --- [vehicule] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-06-30T02:45:31.761+02:00  WARN 8860 --- [vehicule] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-30T02:45:32.697+02:00  INFO 8860 --- [vehicule] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-30T02:45:32.705+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists images cascade 
Hibernate: drop table if exists images cascade 
2025-06-30T02:45:32.723+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists jwt cascade 
Hibernate: drop table if exists jwt cascade 
2025-06-30T02:45:32.723+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists refresh_token cascade 
Hibernate: drop table if exists refresh_token cascade 
2025-06-30T02:45:32.723+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists users cascade 
Hibernate: drop table if exists users cascade 
2025-06-30T02:45:32.723+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists vehicule cascade 
Hibernate: drop table if exists vehicule cascade 
2025-06-30T02:45:32.730+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists vehicule_images cascade 
Hibernate: drop table if exists vehicule_images cascade 
2025-06-30T02:45:32.733+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop sequence if exists jwt_seq
Hibernate: drop sequence if exists jwt_seq
2025-06-30T02:45:32.733+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : drop sequence if exists refresh_token_seq
Hibernate: drop sequence if exists refresh_token_seq
2025-06-30T02:45:32.749+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create sequence jwt_seq start with 1 increment by 1
Hibernate: create sequence jwt_seq start with 1 increment by 1
2025-06-30T02:45:32.765+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create sequence refresh_token_seq start with 1 increment by 1
Hibernate: create sequence refresh_token_seq start with 1 increment by 1
2025-06-30T02:45:32.773+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create table images (id bigint generated by default as identity, vehicule_id uuid not null, chemin varchar(255), nom varchar(255), primary key (id))
Hibernate: create table images (id bigint generated by default as identity, vehicule_id uuid not null, chemin varchar(255), nom varchar(255), primary key (id))
2025-06-30T02:45:32.852+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create table jwt (desactive boolean not null, expire boolean not null, id bigint not null, refresh_token_id bigint unique, utilisateur_id uuid, valeur varchar(255), primary key (id))
Hibernate: create table jwt (desactive boolean not null, expire boolean not null, id bigint not null, refresh_token_id bigint unique, utilisateur_id uuid, valeur varchar(255), primary key (id))
2025-06-30T02:45:32.869+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create table refresh_token (expire boolean not null, create_at timestamp(6) not null, creation timestamp(6) with time zone, expiration timestamp(6) with time zone, id bigint not null, update_at timestamp(6), valeur varchar(255), primary key (id))
Hibernate: create table refresh_token (expire boolean not null, create_at timestamp(6) not null, creation timestamp(6) with time zone, expiration timestamp(6) with time zone, id bigint not null, update_at timestamp(6), valeur varchar(255), primary key (id))
2025-06-30T02:45:32.885+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create table users (actif boolean not null, create_at timestamp(6) not null, delete_at timestamp(6), update_at timestamp(6), id uuid not null, email varchar(255), password varchar(255) not null, username varchar(255) not null, primary key (id))
Hibernate: create table users (actif boolean not null, create_at timestamp(6) not null, delete_at timestamp(6), update_at timestamp(6), id uuid not null, email varchar(255), password varchar(255) not null, username varchar(255) not null, primary key (id))
2025-06-30T02:45:32.901+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create table vehicule (anee integer, rental_price float(53) not null, id uuid not null, chemin_vers_image varchar(255), make varchar(255), model varchar(255), registration_number varchar(255) not null unique, primary key (id))
Hibernate: create table vehicule (anee integer, rental_price float(53) not null, id uuid not null, chemin_vers_image varchar(255), make varchar(255), model varchar(255), registration_number varchar(255) not null unique, primary key (id))
2025-06-30T02:45:32.909+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : create table vehicule_images (images_id bigint not null unique, vehicule_id uuid not null)
Hibernate: create table vehicule_images (images_id bigint not null unique, vehicule_id uuid not null)
2025-06-30T02:45:32.931+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists images add constraint FKq4uoyualnh7w3e2smtqxyusbd foreign key (vehicule_id) references vehicule
Hibernate: alter table if exists images add constraint FKq4uoyualnh7w3e2smtqxyusbd foreign key (vehicule_id) references vehicule
2025-06-30T02:45:33.180+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists jwt add constraint FK5x5slihm7dnfvkhsuw4o3c94o foreign key (refresh_token_id) references refresh_token
Hibernate: alter table if exists jwt add constraint FK5x5slihm7dnfvkhsuw4o3c94o foreign key (refresh_token_id) references refresh_token
2025-06-30T02:45:33.188+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists jwt add constraint FKowcjt2bsvexgfk617r9viwrha foreign key (utilisateur_id) references users
Hibernate: alter table if exists jwt add constraint FKowcjt2bsvexgfk617r9viwrha foreign key (utilisateur_id) references users
2025-06-30T02:45:33.249+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists vehicule_images add constraint FK1rpj7t1lxkrafpwd3lvdve3b7 foreign key (images_id) references images
Hibernate: alter table if exists vehicule_images add constraint FK1rpj7t1lxkrafpwd3lvdve3b7 foreign key (images_id) references images
2025-06-30T02:45:33.267+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists vehicule_images add constraint FKo3400ac44xbsi74nhvv7kvwkj foreign key (vehicule_id) references vehicule
Hibernate: alter table if exists vehicule_images add constraint FKo3400ac44xbsi74nhvv7kvwkj foreign key (vehicule_id) references vehicule
2025-06-30T02:45:33.317+02:00  INFO 8860 --- [vehicule] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-30T02:45:38.211+02:00  WARN 8860 --- [vehicule] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-30T02:45:38.330+02:00  WARN 8860 --- [vehicule] [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 57a87da2-635d-4d62-9a21-e17838370366

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-06-30T02:45:38.338+02:00  INFO 8860 --- [vehicule] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-30T02:45:41.763+02:00  INFO 8860 --- [vehicule] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-06-30T02:45:42.883+02:00  INFO 8860 --- [vehicule] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-06-30T02:45:42.883+02:00  INFO 8860 --- [vehicule] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-06-30T02:45:42.891+02:00  INFO 8860 --- [vehicule] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 8 ms
2025-06-30T02:45:43.000+02:00  INFO 8860 --- [vehicule] [           main] c.p.testing.vehicule.UserControllerTest  : Started UserControllerTest in 17.72 seconds (process running for 103.985)
2025-06-30T02:45:55.944+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:45:57.499+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-06-30T02:45:58.099+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
  </testcase>
  <testcase name="testChangePassword_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="3.263">
    <system-out><![CDATA[2025-06-30T02:45:59.982+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:00.669+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-06-30T02:46:00.912+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:01.018+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:02.146+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:02.163+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
Hibernate: insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
2025-06-30T02:46:02.196+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
2025-06-30T02:46:02.229+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
Hibernate: insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
2025-06-30T02:46:02.664+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : update users set actif=?,delete_at=?,email=?,password=?,update_at=?,username=? where id=?
Hibernate: update users set actif=?,delete_at=?,email=?,password=?,update_at=?,username=? where id=?
]]></system-out>
  </testcase>
  <testcase name="testChangePassword_FailedWithEmailNotFound" classname="com.projet.testing.vehicule.UserControllerTest" time="0.23">
    <system-out><![CDATA[2025-06-30T02:46:02.898+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testUpdateUser_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="1.695">
    <system-out><![CDATA[2025-06-30T02:46:03.103+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:03.681+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-06-30T02:46:04.184+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:04.380+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
2025-06-30T02:46:04.701+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:04.717+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : update users set actif=?,delete_at=?,email=?,password=?,update_at=?,username=? where id=?
Hibernate: update users set actif=?,delete_at=?,email=?,password=?,update_at=?,username=? where id=?
]]></system-out>
  </testcase>
  <testcase name="testLogin_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="0.948">
    <system-out><![CDATA[2025-06-30T02:46:04.804+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:05.215+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-06-30T02:46:05.299+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:05.615+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:05.648+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
Hibernate: insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
2025-06-30T02:46:05.648+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
2025-06-30T02:46:05.656+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
Hibernate: insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testRefreshTokens_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="1.12">
    <system-out><![CDATA[2025-06-30T02:46:05.879+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:06.197+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-06-30T02:46:06.266+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:06.294+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:06.294+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
2025-06-30T02:46:06.450+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
Hibernate: insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
2025-06-30T02:46:06.450+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
Hibernate: insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
2025-06-30T02:46:06.466+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
Hibernate: select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
2025-06-30T02:46:06.669+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select j1_0.id,j1_0.desactive,j1_0.expire,j1_0.refresh_token_id,j1_0.utilisateur_id,j1_0.valeur from jwt j1_0 where j1_0.refresh_token_id=?
Hibernate: select j1_0.id,j1_0.desactive,j1_0.expire,j1_0.refresh_token_id,j1_0.utilisateur_id,j1_0.valeur from jwt j1_0 where j1_0.refresh_token_id=?
2025-06-30T02:46:06.768+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:06.782+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
]]></system-out>
    <system-err><![CDATA[Echec du test du a un user inexistant pour l'email de test
]]></system-err>
  </testcase>
  <testcase name="testAddUser_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="0.431">
    <system-out><![CDATA[2025-06-30T02:46:06.886+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:07.235+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testRefreshAccessToken_InvalidToken" classname="com.projet.testing.vehicule.UserControllerTest" time="0.166"/>
  <testcase name="testLogin_InvalidCredentials" classname="com.projet.testing.vehicule.UserControllerTest" time="0.224">
    <system-out><![CDATA[2025-06-30T02:46:07.464+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:07.649+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testRefreshAccessToken_WithRefreshTokenNotFound" classname="com.projet.testing.vehicule.UserControllerTest" time="0.098">
    <system-out><![CDATA[2025-06-30T02:46:07.748+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
Hibernate: select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testUpdateUser_NotFound" classname="com.projet.testing.vehicule.UserControllerTest" time="0.092">
    <system-out><![CDATA[2025-06-30T02:46:07.834+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testUpdateUser_InvalidEmail" classname="com.projet.testing.vehicule.UserControllerTest" time="0.266">
    <system-out><![CDATA[2025-06-30T02:46:07.885+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:07.900+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
2025-06-30T02:46:08.097+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testRefreshAccessToken_ExpiredToken" classname="com.projet.testing.vehicule.UserControllerTest" time="0.117"/>
  <testcase name="testChangePassword_WeakPassword" classname="com.projet.testing.vehicule.UserControllerTest" time="0.281">
    <system-out><![CDATA[2025-06-30T02:46:08.281+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:08.306+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:08.500+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:08.513+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
Hibernate: insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
2025-06-30T02:46:08.513+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
2025-06-30T02:46:08.513+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
Hibernate: insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testRefreshTokens_WithRefreshTokenNotFound" classname="com.projet.testing.vehicule.UserControllerTest" time="0.052">
    <system-out><![CDATA[2025-06-30T02:46:08.556+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
Hibernate: select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testChangePassword_WrongOldPassword" classname="com.projet.testing.vehicule.UserControllerTest" time="0.333">
    <system-out><![CDATA[2025-06-30T02:46:08.616+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:08.633+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testGetAllUsers_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="0.069">
    <system-out><![CDATA[2025-06-30T02:46:08.960+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.delete_at is null
]]></system-out>
  </testcase>
  <testcase name="testRefreshTokens_With_RefreshToken_Not_Expired" classname="com.projet.testing.vehicule.UserControllerTest" time="0.348">
    <system-out><![CDATA[2025-06-30T02:46:09.035+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:09.278+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:09.278+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
2025-06-30T02:46:09.278+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
Hibernate: insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
2025-06-30T02:46:09.299+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
Hibernate: insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
2025-06-30T02:46:09.299+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
Hibernate: select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testAddUser_InvalidEmail" classname="com.projet.testing.vehicule.UserControllerTest" time="0.172">
    <system-out><![CDATA[2025-06-30T02:46:09.434+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
  <testcase name="testAddUser_WeakPassword" classname="com.projet.testing.vehicule.UserControllerTest" time="0.082"/>
  <testcase name="testRefreshAccessToken_Success" classname="com.projet.testing.vehicule.UserControllerTest" time="0.439">
    <system-out><![CDATA[2025-06-30T02:46:09.632+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-06-30T02:46:09.846+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-06-30T02:46:09.846+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
2025-06-30T02:46:09.883+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
Hibernate: insert into refresh_token (create_at,creation,expiration,expire,update_at,valeur,id) values (?,?,?,?,?,?,?)
2025-06-30T02:46:09.897+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
Hibernate: insert into jwt (desactive,expire,refresh_token_id,utilisateur_id,valeur,id) values (?,?,?,?,?,?)
2025-06-30T02:46:09.915+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
Hibernate: select rt1_0.id,rt1_0.create_at,rt1_0.creation,rt1_0.expiration,rt1_0.expire,rt1_0.update_at,rt1_0.valeur from refresh_token rt1_0 where rt1_0.valeur=? and not(rt1_0.expire)
2025-06-30T02:46:09.929+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select j1_0.id,j1_0.desactive,j1_0.expire,j1_0.refresh_token_id,j1_0.utilisateur_id,j1_0.valeur from jwt j1_0 where j1_0.refresh_token_id=?
Hibernate: select j1_0.id,j1_0.desactive,j1_0.expire,j1_0.refresh_token_id,j1_0.utilisateur_id,j1_0.valeur from jwt j1_0 where j1_0.refresh_token_id=?
]]></system-out>
  </testcase>
  <testcase name="testGetUser_FailedWithNotFoundEmail" classname="com.projet.testing.vehicule.UserControllerTest" time="0.105">
    <system-out><![CDATA[2025-06-30T02:46:10.121+02:00 DEBUG 8860 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
    <system-err><![CDATA[Une Exception coté client a été levée
]]></system-err>
  </testcase>
</testsuite>