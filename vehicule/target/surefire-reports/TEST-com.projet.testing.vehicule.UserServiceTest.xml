<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.projet.testing.vehicule.UserServiceTest" time="4.82" tests="9" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/danilo/INF352/projetF/vehicule/target/test-classes:/home/danilo/INF352/projetF/vehicule/target/classes:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.3.4/spring-boot-starter-data-jpa-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.3.4/spring-boot-starter-aop-3.3.4.jar:/home/danilo/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.3.4/spring-boot-starter-jdbc-3.3.4.jar:/home/danilo/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/home/danilo/.m2/repository/org/springframework/spring-jdbc/6.1.13/spring-jdbc-6.1.13.jar:/home/danilo/.m2/repository/org/hibernate/orm/hibernate-core/6.5.3.Final/hibernate-core-6.5.3.Final.jar:/home/danilo/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/danilo/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/danilo/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/danilo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/danilo/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/danilo/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/danilo/.m2/repository/net/bytebuddy/byte-buddy/1.14.19/byte-buddy-1.14.19.jar:/home/danilo/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/danilo/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/danilo/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/danilo/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/danilo/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/danilo/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/danilo/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/danilo/.m2/repository/org/springframework/data/spring-data-jpa/3.3.4/spring-data-jpa-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/data/spring-data-commons/3.3.4/spring-data-commons-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/spring-orm/6.1.13/spring-orm-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-context/6.1.13/spring-context-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-tx/6.1.13/spring-tx-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-beans/6.1.13/spring-beans-6.1.13.jar:/home/danilo/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/danilo/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/home/danilo/.m2/repository/org/springframework/spring-aspects/6.1.13/spring-aspects-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.3.4/spring-boot-starter-validation-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter/3.3.4/spring-boot-starter-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot/3.3.4/spring-boot-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.3.4/spring-boot-autoconfigure-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.3.4/spring-boot-starter-logging-3.3.4.jar:/home/danilo/.m2/repository/ch/qos/logback/logback-classic/1.5.8/logback-classic-1.5.8.jar:/home/danilo/.m2/repository/ch/qos/logback/logback-core/1.5.8/logback-core-1.5.8.jar:/home/danilo/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.23.1/log4j-to-slf4j-2.23.1.jar:/home/danilo/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/home/danilo/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/home/danilo/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/danilo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.30/tomcat-embed-el-10.1.30.jar:/home/danilo/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/danilo/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/danilo/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/danilo/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/danilo/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.17.2/jackson-databind-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.17.2/jackson-annotations-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.17.2/jackson-core-2.17.2.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.3/junit-jupiter-api-5.10.3.jar:/home/danilo/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/danilo/.m2/repository/org/junit/platform/junit-platform-commons/1.10.3/junit-platform-commons-1.10.3.jar:/home/danilo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.3/junit-jupiter-params-5.10.3.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.3/junit-jupiter-engine-5.10.3.jar:/home/danilo/.m2/repository/org/junit/platform/junit-platform-engine/1.10.3/junit-platform-engine-1.10.3.jar:/home/danilo/.m2/repository/com/aventstack/extentreports/5.1.1/extentreports-5.1.1.jar:/home/danilo/.m2/repository/io/reactivex/rxjava3/rxjava/3.1.9/rxjava-3.1.9.jar:/home/danilo/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/danilo/.m2/repository/org/freemarker/freemarker/2.3.33/freemarker-2.3.33.jar:/home/danilo/.m2/repository/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.3.4/spring-boot-starter-web-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.3.4/spring-boot-starter-json-3.3.4.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.17.2/jackson-datatype-jdk8-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.17.2/jackson-datatype-jsr310-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.17.2/jackson-module-parameter-names-2.17.2.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.3.4/spring-boot-starter-tomcat-3.3.4.jar:/home/danilo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.30/tomcat-embed-core-10.1.30.jar:/home/danilo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.30/tomcat-embed-websocket-10.1.30.jar:/home/danilo/.m2/repository/org/springframework/spring-web/6.1.13/spring-web-6.1.13.jar:/home/danilo/.m2/repository/io/micrometer/micrometer-observation/1.13.4/micrometer-observation-1.13.4.jar:/home/danilo/.m2/repository/io/micrometer/micrometer-commons/1.13.4/micrometer-commons-1.13.4.jar:/home/danilo/.m2/repository/org/springframework/spring-webmvc/6.1.13/spring-webmvc-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-expression/6.1.13/spring-expression-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.3.4/spring-boot-starter-security-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/spring-aop/6.1.13/spring-aop-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-config/6.3.3/spring-security-config-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-web/6.3.3/spring-security-web-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-test/6.3.3/spring-security-test-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-core/6.3.3/spring-security-core-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-crypto/6.3.3/spring-security-crypto-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/spring-core/6.1.13/spring-core-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-jcl/6.1.13/spring-jcl-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-test/6.1.13/spring-test-6.1.13.jar:/home/danilo/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/home/danilo/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/home/danilo/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.5.0/springdoc-openapi-starter-webmvc-ui-2.5.0.jar:/home/danilo/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.5.0/springdoc-openapi-starter-webmvc-api-2.5.0.jar:/home/danilo/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.5.0/springdoc-openapi-starter-common-2.5.0.jar:/home/danilo/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.21/swagger-core-jakarta-2.2.21.jar:/home/danilo/.m2/repository/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar:/home/danilo/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.21/swagger-annotations-jakarta-2.2.21.jar:/home/danilo/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.21/swagger-models-jakarta-2.2.21.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.17.2/jackson-dataformat-yaml-2.17.2.jar:/home/danilo/.m2/repository/org/webjars/swagger-ui/5.13.0/swagger-ui-5.13.0.jar:/home/danilo/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/danilo/.m2/repository/org/projectlombok/lombok/1.18.34/lombok-1.18.34.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.3.4/spring-boot-starter-test-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-test/3.3.4/spring-boot-test-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.3.4/spring-boot-test-autoconfigure-3.3.4.jar:/home/danilo/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/danilo/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/danilo/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/danilo/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/danilo/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/danilo/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/danilo/.m2/repository/org/assertj/assertj-core/3.25.3/assertj-core-3.25.3.jar:/home/danilo/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/danilo/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/danilo/.m2/repository/org/mockito/mockito-core/5.11.0/mockito-core-5.11.0.jar:/home/danilo/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.19/byte-buddy-agent-1.14.19.jar:/home/danilo/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/danilo/.m2/repository/org/mockito/mockito-junit-jupiter/5.11.0/mockito-junit-jupiter-5.11.0.jar:/home/danilo/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/danilo/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/danilo/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="user.timezone" value="Africa/Douala"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="FR"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-21-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/danilo/INF352/projetF/vehicule/target/surefire/surefirebooter-20250701021553266_3.jar /home/danilo/INF352/projetF/vehicule/target/surefire 2025-07-01T02-15-53_021-jvmRun1 surefire-20250701021553266_1tmp surefire_0-20250701021553266_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/danilo/INF352/projetF/vehicule/target/test-classes:/home/danilo/INF352/projetF/vehicule/target/classes:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.3.4/spring-boot-starter-data-jpa-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.3.4/spring-boot-starter-aop-3.3.4.jar:/home/danilo/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.3.4/spring-boot-starter-jdbc-3.3.4.jar:/home/danilo/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/home/danilo/.m2/repository/org/springframework/spring-jdbc/6.1.13/spring-jdbc-6.1.13.jar:/home/danilo/.m2/repository/org/hibernate/orm/hibernate-core/6.5.3.Final/hibernate-core-6.5.3.Final.jar:/home/danilo/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/danilo/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/danilo/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/danilo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/danilo/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/danilo/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/danilo/.m2/repository/net/bytebuddy/byte-buddy/1.14.19/byte-buddy-1.14.19.jar:/home/danilo/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/danilo/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/danilo/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/danilo/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/danilo/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/danilo/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/danilo/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/danilo/.m2/repository/org/springframework/data/spring-data-jpa/3.3.4/spring-data-jpa-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/data/spring-data-commons/3.3.4/spring-data-commons-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/spring-orm/6.1.13/spring-orm-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-context/6.1.13/spring-context-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-tx/6.1.13/spring-tx-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-beans/6.1.13/spring-beans-6.1.13.jar:/home/danilo/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/danilo/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/home/danilo/.m2/repository/org/springframework/spring-aspects/6.1.13/spring-aspects-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.3.4/spring-boot-starter-validation-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter/3.3.4/spring-boot-starter-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot/3.3.4/spring-boot-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.3.4/spring-boot-autoconfigure-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.3.4/spring-boot-starter-logging-3.3.4.jar:/home/danilo/.m2/repository/ch/qos/logback/logback-classic/1.5.8/logback-classic-1.5.8.jar:/home/danilo/.m2/repository/ch/qos/logback/logback-core/1.5.8/logback-core-1.5.8.jar:/home/danilo/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.23.1/log4j-to-slf4j-2.23.1.jar:/home/danilo/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/home/danilo/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/home/danilo/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/danilo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.30/tomcat-embed-el-10.1.30.jar:/home/danilo/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/danilo/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/danilo/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/danilo/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/danilo/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.17.2/jackson-databind-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.17.2/jackson-annotations-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.17.2/jackson-core-2.17.2.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.3/junit-jupiter-api-5.10.3.jar:/home/danilo/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/danilo/.m2/repository/org/junit/platform/junit-platform-commons/1.10.3/junit-platform-commons-1.10.3.jar:/home/danilo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.3/junit-jupiter-params-5.10.3.jar:/home/danilo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.3/junit-jupiter-engine-5.10.3.jar:/home/danilo/.m2/repository/org/junit/platform/junit-platform-engine/1.10.3/junit-platform-engine-1.10.3.jar:/home/danilo/.m2/repository/com/aventstack/extentreports/5.1.1/extentreports-5.1.1.jar:/home/danilo/.m2/repository/io/reactivex/rxjava3/rxjava/3.1.9/rxjava-3.1.9.jar:/home/danilo/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/danilo/.m2/repository/org/freemarker/freemarker/2.3.33/freemarker-2.3.33.jar:/home/danilo/.m2/repository/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.3.4/spring-boot-starter-web-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.3.4/spring-boot-starter-json-3.3.4.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.17.2/jackson-datatype-jdk8-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.17.2/jackson-datatype-jsr310-2.17.2.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.17.2/jackson-module-parameter-names-2.17.2.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.3.4/spring-boot-starter-tomcat-3.3.4.jar:/home/danilo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.30/tomcat-embed-core-10.1.30.jar:/home/danilo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.30/tomcat-embed-websocket-10.1.30.jar:/home/danilo/.m2/repository/org/springframework/spring-web/6.1.13/spring-web-6.1.13.jar:/home/danilo/.m2/repository/io/micrometer/micrometer-observation/1.13.4/micrometer-observation-1.13.4.jar:/home/danilo/.m2/repository/io/micrometer/micrometer-commons/1.13.4/micrometer-commons-1.13.4.jar:/home/danilo/.m2/repository/org/springframework/spring-webmvc/6.1.13/spring-webmvc-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-expression/6.1.13/spring-expression-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.3.4/spring-boot-starter-security-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/spring-aop/6.1.13/spring-aop-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-config/6.3.3/spring-security-config-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-web/6.3.3/spring-security-web-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-test/6.3.3/spring-security-test-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-core/6.3.3/spring-security-core-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/security/spring-security-crypto/6.3.3/spring-security-crypto-6.3.3.jar:/home/danilo/.m2/repository/org/springframework/spring-core/6.1.13/spring-core-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-jcl/6.1.13/spring-jcl-6.1.13.jar:/home/danilo/.m2/repository/org/springframework/spring-test/6.1.13/spring-test-6.1.13.jar:/home/danilo/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/home/danilo/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/home/danilo/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.5.0/springdoc-openapi-starter-webmvc-ui-2.5.0.jar:/home/danilo/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.5.0/springdoc-openapi-starter-webmvc-api-2.5.0.jar:/home/danilo/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.5.0/springdoc-openapi-starter-common-2.5.0.jar:/home/danilo/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.21/swagger-core-jakarta-2.2.21.jar:/home/danilo/.m2/repository/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar:/home/danilo/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.21/swagger-annotations-jakarta-2.2.21.jar:/home/danilo/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.21/swagger-models-jakarta-2.2.21.jar:/home/danilo/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.17.2/jackson-dataformat-yaml-2.17.2.jar:/home/danilo/.m2/repository/org/webjars/swagger-ui/5.13.0/swagger-ui-5.13.0.jar:/home/danilo/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/danilo/.m2/repository/org/projectlombok/lombok/1.18.34/lombok-1.18.34.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.3.4/spring-boot-starter-test-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-test/3.3.4/spring-boot-test-3.3.4.jar:/home/danilo/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.3.4/spring-boot-test-autoconfigure-3.3.4.jar:/home/danilo/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/danilo/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/danilo/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/danilo/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/danilo/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/danilo/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/danilo/.m2/repository/org/assertj/assertj-core/3.25.3/assertj-core-3.25.3.jar:/home/danilo/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/danilo/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/danilo/.m2/repository/org/mockito/mockito-core/5.11.0/mockito-core-5.11.0.jar:/home/danilo/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.19/byte-buddy-agent-1.14.19.jar:/home/danilo/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/danilo/.m2/repository/org/mockito/mockito-junit-jupiter/5.11.0/mockito-junit-jupiter-5.11.0.jar:/home/danilo/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/danilo/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/danilo/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/danilo"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/usr/lib/jvm/java-21-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/danilo/INF352/projetF/vehicule"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/danilo/INF352/projetF/vehicule/target/surefire/surefirebooter-20250701021553266_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.6+7-Ubuntu-122.04.1"/>
    <property name="user.name" value="danilo"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.8.0-57-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/danilo/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-21"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="21.0.6"/>
    <property name="user.dir" value="/home/danilo/INF352/projetF/vehicule"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="11817"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="java.vm.version" value="21.0.6+7-Ubuntu-122.04.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[vehicule] "/>
  </properties>
  <testcase name="testCreateUserThrowsBusinessException" classname="com.projet.testing.vehicule.UserServiceTest" time="0.395">
    <system-out><![CDATA[2025-07-01T02:16:25.436+01:00  INFO 11817 --- [vehicule] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.projet.testing.vehicule.UserServiceTest]: UserServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-01T02:16:25.441+01:00  INFO 11817 --- [vehicule] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.projet.testing.vehicule.VehiculeApplication for test class com.projet.testing.vehicule.UserServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.4)

2025-07-01T02:16:25.549+01:00  INFO 11817 --- [vehicule] [           main] c.p.testing.vehicule.UserServiceTest     : Starting UserServiceTest using Java 21.0.6 with PID 11817 (started by danilo in /home/danilo/INF352/projetF/vehicule)
2025-07-01T02:16:25.549+01:00  INFO 11817 --- [vehicule] [           main] c.p.testing.vehicule.UserServiceTest     : The following 1 profile is active: "test"
2025-07-01T02:16:26.007+01:00  INFO 11817 --- [vehicule] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-01T02:16:26.028+01:00  INFO 11817 --- [vehicule] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 6 JPA repository interfaces.
2025-07-01T02:16:26.218+01:00  INFO 11817 --- [vehicule] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-01T02:16:26.221+01:00  INFO 11817 --- [vehicule] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-01T02:16:26.233+01:00  INFO 11817 --- [vehicule] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-01T02:16:26.234+01:00  INFO 11817 --- [vehicule] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-07-01T02:16:27.048+01:00  INFO 11817 --- [vehicule] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-01T02:16:27.048+01:00  INFO 11817 --- [vehicule] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-07-01T02:16:27.059+01:00  WARN 11817 --- [vehicule] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-01T02:16:27.414+01:00  INFO 11817 --- [vehicule] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-01T02:16:27.417+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists images cascade 
Hibernate: drop table if exists images cascade 
2025-07-01T02:16:27.427+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists jwt cascade 
Hibernate: drop table if exists jwt cascade 
2025-07-01T02:16:27.427+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists refresh_token cascade 
Hibernate: drop table if exists refresh_token cascade 
2025-07-01T02:16:27.428+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists users cascade 
Hibernate: drop table if exists users cascade 
2025-07-01T02:16:27.429+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists vehicule cascade 
Hibernate: drop table if exists vehicule cascade 
2025-07-01T02:16:27.429+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop table if exists vehicule_images cascade 
Hibernate: drop table if exists vehicule_images cascade 
2025-07-01T02:16:27.430+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop sequence if exists jwt_seq
Hibernate: drop sequence if exists jwt_seq
2025-07-01T02:16:27.431+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : drop sequence if exists refresh_token_seq
Hibernate: drop sequence if exists refresh_token_seq
2025-07-01T02:16:27.438+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create sequence jwt_seq start with 1 increment by 1
Hibernate: create sequence jwt_seq start with 1 increment by 1
2025-07-01T02:16:27.443+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create sequence refresh_token_seq start with 1 increment by 1
Hibernate: create sequence refresh_token_seq start with 1 increment by 1
2025-07-01T02:16:27.456+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create table images (id bigint generated by default as identity, vehicule_id uuid not null, chemin varchar(255), nom varchar(255), primary key (id))
Hibernate: create table images (id bigint generated by default as identity, vehicule_id uuid not null, chemin varchar(255), nom varchar(255), primary key (id))
2025-07-01T02:16:27.476+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create table jwt (desactive boolean not null, expire boolean not null, id bigint not null, refresh_token_id bigint unique, utilisateur_id uuid, valeur varchar(255), primary key (id))
Hibernate: create table jwt (desactive boolean not null, expire boolean not null, id bigint not null, refresh_token_id bigint unique, utilisateur_id uuid, valeur varchar(255), primary key (id))
2025-07-01T02:16:27.481+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create table refresh_token (expire boolean not null, create_at timestamp(6) not null, creation timestamp(6) with time zone, expiration timestamp(6) with time zone, id bigint not null, update_at timestamp(6), valeur varchar(255), primary key (id))
Hibernate: create table refresh_token (expire boolean not null, create_at timestamp(6) not null, creation timestamp(6) with time zone, expiration timestamp(6) with time zone, id bigint not null, update_at timestamp(6), valeur varchar(255), primary key (id))
2025-07-01T02:16:27.485+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create table users (actif boolean not null, create_at timestamp(6) not null, delete_at timestamp(6), update_at timestamp(6), id uuid not null, email varchar(255), password varchar(255) not null, username varchar(255) not null, primary key (id))
Hibernate: create table users (actif boolean not null, create_at timestamp(6) not null, delete_at timestamp(6), update_at timestamp(6), id uuid not null, email varchar(255), password varchar(255) not null, username varchar(255) not null, primary key (id))
2025-07-01T02:16:27.489+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create table vehicule (anee integer, rental_price float(53) not null, id uuid not null, chemin_vers_image varchar(255), make varchar(255), model varchar(255), registration_number varchar(255) not null unique, primary key (id))
Hibernate: create table vehicule (anee integer, rental_price float(53) not null, id uuid not null, chemin_vers_image varchar(255), make varchar(255), model varchar(255), registration_number varchar(255) not null unique, primary key (id))
2025-07-01T02:16:27.493+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : create table vehicule_images (images_id bigint not null unique, vehicule_id uuid not null)
Hibernate: create table vehicule_images (images_id bigint not null unique, vehicule_id uuid not null)
2025-07-01T02:16:27.496+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists images add constraint FKq4uoyualnh7w3e2smtqxyusbd foreign key (vehicule_id) references vehicule
Hibernate: alter table if exists images add constraint FKq4uoyualnh7w3e2smtqxyusbd foreign key (vehicule_id) references vehicule
2025-07-01T02:16:27.535+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists jwt add constraint FK5x5slihm7dnfvkhsuw4o3c94o foreign key (refresh_token_id) references refresh_token
Hibernate: alter table if exists jwt add constraint FK5x5slihm7dnfvkhsuw4o3c94o foreign key (refresh_token_id) references refresh_token
2025-07-01T02:16:27.538+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists jwt add constraint FKowcjt2bsvexgfk617r9viwrha foreign key (utilisateur_id) references users
Hibernate: alter table if exists jwt add constraint FKowcjt2bsvexgfk617r9viwrha foreign key (utilisateur_id) references users
2025-07-01T02:16:27.542+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists vehicule_images add constraint FK1rpj7t1lxkrafpwd3lvdve3b7 foreign key (images_id) references images
Hibernate: alter table if exists vehicule_images add constraint FK1rpj7t1lxkrafpwd3lvdve3b7 foreign key (images_id) references images
2025-07-01T02:16:27.544+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : alter table if exists vehicule_images add constraint FKo3400ac44xbsi74nhvv7kvwkj foreign key (vehicule_id) references vehicule
Hibernate: alter table if exists vehicule_images add constraint FKo3400ac44xbsi74nhvv7kvwkj foreign key (vehicule_id) references vehicule
2025-07-01T02:16:27.552+01:00  INFO 11817 --- [vehicule] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-01T02:16:27.781+01:00  WARN 11817 --- [vehicule] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-01T02:16:27.798+01:00  WARN 11817 --- [vehicule] [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 26c30d5d-7070-4c4e-905a-034defe48353

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-01T02:16:27.799+01:00  INFO 11817 --- [vehicule] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-01T02:16:28.113+01:00  INFO 11817 --- [vehicule] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-01T02:16:28.172+01:00  INFO 11817 --- [vehicule] [           main] c.p.testing.vehicule.UserServiceTest     : Started UserServiceTest in 2.723 seconds (process running for 34.738)
2025-07-01T02:16:28.410+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-07-01T02:16:28.860+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
  </testcase>
  <testcase name="testGetUserByEmail" classname="com.projet.testing.vehicule.UserServiceTest" time="0.014">
    <system-out><![CDATA[2025-07-01T02:16:28.897+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
  </testcase>
  <testcase name="testLoginSuccess" classname="com.projet.testing.vehicule.UserServiceTest" time="0.277">
    <system-out><![CDATA[2025-07-01T02:16:28.920+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.033+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-07-01T02:16:29.034+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.143+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-07-01T02:16:29.165+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
]]></system-out>
  </testcase>
  <testcase name="testGetAllUsers" classname="com.projet.testing.vehicule.UserServiceTest" time="0.131">
    <system-out><![CDATA[2025-07-01T02:16:29.188+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.299+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-07-01T02:16:29.305+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.delete_at is null
]]></system-out>
  </testcase>
  <testcase name="testUpdateUser" classname="com.projet.testing.vehicule.UserServiceTest" time="0.167">
    <system-out><![CDATA[2025-07-01T02:16:29.321+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.326+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
2025-07-01T02:16:29.440+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.456+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=?
2025-07-01T02:16:29.467+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : update users set actif=?,delete_at=?,email=?,password=?,update_at=?,username=? where id=?
Hibernate: update users set actif=?,delete_at=?,email=?,password=?,update_at=?,username=? where id=?
]]></system-out>
  </testcase>
  <testcase name="testChangePassword" classname="com.projet.testing.vehicule.UserServiceTest" time="0.37">
    <system-out><![CDATA[2025-07-01T02:16:29.488+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.596+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
2025-07-01T02:16:29.598+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.601+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.709+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for refresh_token_seq
Hibernate: select next value for refresh_token_seq
2025-07-01T02:16:29.711+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select next value for jwt_seq
Hibernate: select next value for jwt_seq
]]></system-out>
  </testcase>
  <testcase name="testUpdateUserMailWithMailOfOtherUser_ThrowsBusinessException" classname="com.projet.testing.vehicule.UserServiceTest" time="0.136">
    <system-out><![CDATA[2025-07-01T02:16:29.857+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.delete_at is null
2025-07-01T02:16:29.863+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:29.869+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.id=? and u1_0.delete_at is null
2025-07-01T02:16:29.982+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
  </testcase>
  <testcase name="testCreateUser" classname="com.projet.testing.vehicule.UserServiceTest" time="0.118">
    <system-out><![CDATA[2025-07-01T02:16:29.994+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
2025-07-01T02:16:30.101+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
Hibernate: insert into users (actif,create_at,delete_at,email,password,update_at,username,id) values (?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testCreateUserWithWeakPassword_ThrowsBusinessException" classname="com.projet.testing.vehicule.UserServiceTest" time="0.01">
    <system-out><![CDATA[2025-07-01T02:16:30.112+01:00 DEBUG 11817 --- [vehicule] [           main] org.hibernate.SQL                        : select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
Hibernate: select u1_0.id,u1_0.actif,u1_0.create_at,u1_0.delete_at,u1_0.email,u1_0.password,u1_0.update_at,u1_0.username from users u1_0 where u1_0.email=? and u1_0.delete_at is null
]]></system-out>
  </testcase>
</testsuite>